name: WINDOWS 2022 RDP
on:
  workflow_dispatch
jobs:
  build:
    runs-on: windows-2022
    timeout-minutes: 9999
    steps:
      - name: Download Ngrok.
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
          Invoke-WebRequest https://raw.githubusercontent.com/Riders004/rdp/master/start.bat -OutFile start.bat
          Invoke-WebRequest https://raw.githubusercontent.com/Riders004/rdp/master/download1.jpeg -OutFile wallpaper.bat
          Invoke-WebRequest https://raw.githubusercontent.com/Vip3rLi0n/Ngrok-RDPs/main/resources/loop.ps1 -OutFile loop.ps1

      - name: Extract ngrok
        run: Expand-Archive ngrok.zip

      - name: Connect Ngrok (install token).
        env:
          NGROK_AUTH: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          ./ngrok/ngrok.exe config add-authtoken $Env:NGROK_AUTH

      - name: Windows RDP.
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
          copy wallpaper.bat D:\a\wallpaper.bat

      - name: Tunnel (start ngrok tcp with JSON log)
        run: |
          Start-Process `
            -FilePath "./ngrok/ngrok.exe" `
            -ArgumentList 'tcp --region ap 3389 --log=stdout --log-format=json' `
            -NoNewWindow `
            -RedirectStandardOutput "ngrok.log"

      - name: Connect Rdp (print creds)
        run: cmd /c start.bat

      - name: Get tunnel address (print tcp host:port)
        shell: pwsh
        run: |
          $retries = 0
          while ($retries -lt 30) {
            if (Test-Path ".\ngrok.log") {
              $line = Get-Content .\ngrok.log | Where-Object { $_ -match '"url":"tcp://[^"]+"' } | Select-Object -Last 1
              if ($line) {
                $m = [regex]::Match($line, '"url":"tcp://([^"]+)"')
                if ($m.Success) { Write-Host "IP: $($m.Groups[1].Value)"; break }
              }
            }
            Start-Sleep -Seconds 2
            $retries++
          }
          if ($retries -ge 30) { Write-Error "Could not retrieve ngrok tcp address"; }

      - name: Keep alive.
        run: powershell -ExecutionPolicy Bypass -File loop.ps1
